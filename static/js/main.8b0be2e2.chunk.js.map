{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","redux/actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","connect","dispatch","onSubmit","actions","useState","setName","setNumber","handleInput","event","currentTarget","value","className","style","ContactForm","preventDefault","label","input","onChange","type","pattern","title","required","button","state","contacts","filter","e","target","ContactList","list","useSelector","items","visibleContacts","useDispatch","map","listItem","listItemName","listItemNumber","onClick","normalizedFilter","toLowerCase","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","find","alert","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8b0be2e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"title\":\"Filter_title__mtLuE\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contacts/delete\");\n\nconst filterContacts = createAction(\"contacts/filterContacts\");\n\nexport default { addContact, deleteContact, filterContacts };\n\n//redux\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContact = (id) => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\n\n// const filterContacts = (value) => ({\n//   type: types.FILTER,\n//   payload: value,\n// });\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport actions from \"../../redux/actions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInput = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  return (\n    <form className={style.ContactForm} onSubmit={handleSubmit}>\n      <label className={style.label}>Name</label>\n      <input\n        className={style.input}\n        value={name}\n        onChange={handleInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <label className={style.label}>Number</label>\n      <input\n        className={style.input}\n        value={number}\n        onChange={handleInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <button type=\"submit\" className={style.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\n// redux\n\nconst mapDispatchToProrps = (dispatch) => ({\n  onSubmit: ({ name, number }) => dispatch(actions.addContact(name, number)),\n});\nexport default connect(null, mapDispatchToProrps)(ContactForm);\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport style from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// const ContactList = ({ contacts, onDelete }) => {\n\nexport default function ContactList() {\n  const list = useSelector(({ contacts: { items, filter } }) =>\n    visibleContacts(items, filter)\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={style.list}>\n      {list.map(({ id, name, number }) => (\n        <li key={id} className={style.listItem}>\n          <span className={style.listItemName}>{name}:</span>\n          <span className={style.listItemNumber}>{number}</span>\n          <button\n            type=\"button\"\n            className={style.button}\n            // onClick={() => onDelete(id)}\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  onClick: PropTypes.func.isRequired,\n};\n\nconst visibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\n// redux\n\n// const visibleContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: visibleContacts(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDelete: (id) => dispatch(actions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport PropTypes from \"prop-types\";\n\nexport default function App() {\n  return (\n    <>\n      <h1 className={style.title}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2 className={style.title}>Contacts</h2>\n      <ContactList />\n    </>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// redux-toolkit\n\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    if (state.find(({ name }) => name === payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n      return;\n    }\n    return [payload, ...state];\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// redux;\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       if (\n//         state.find(\n//           (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n//         )\n//       ) {\n//         alert(`${payload.name} is already in contacts`);\n\n//       }\n//     return [payload, ...state];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./reducer\";\n\nconst middlware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\nconst contactsPersistConfig = {\n  key: \"items\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middlware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n// redux\n\n// import { createStore, combineReducers } from 'redux';\n// import contactsReducer from './reducer';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"listItem\":\"ContactList_listItem__29Cbr\",\"listItemName\":\"ContactList_listItemName__39F1_\",\"listItemNumber\":\"ContactList_listItemNumber__3d8DW\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}